// Code generated by mockery v2.35.2. DO NOT EDIT.

package mocks

import (
	teamentity "antia/internal/entities/teamentity"
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// TeamStore is an autogenerated mock type for the TeamStore type
type TeamStore struct {
	mock.Mock
}

// GetTeams provides a mock function with given fields: ctx
func (_m *TeamStore) GetTeams(ctx context.Context) ([]*teamentity.Team, error) {
	ret := _m.Called(ctx)

	var r0 []*teamentity.Team
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context) ([]*teamentity.Team, error)); ok {
		return rf(ctx)
	}
	if rf, ok := ret.Get(0).(func(context.Context) []*teamentity.Team); ok {
		r0 = rf(ctx)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*teamentity.Team)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context) error); ok {
		r1 = rf(ctx)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewTeamStore creates a new instance of TeamStore. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewTeamStore(t interface {
	mock.TestingT
	Cleanup(func())
}) *TeamStore {
	mock := &TeamStore{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
